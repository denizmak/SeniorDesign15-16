#Created by Deni Zmak
#SE 450 - Senior Design Project, BEHI 2.0
#October 17, 2015


#-------------------CREATE TABLE QUERIES -----------------

CREATE TABLE Student (
	studentID CHAR(7) PRIMARY KEY, 
	firstName VARCHAR(22) NOT NULL, 
	lastName VARCHAR(22) NOT NULL, 
	email VARCHAR(22) UNIQUE, 
	username VARCHAR(11) UNIQUE, 
	password VARCHAR(11) NOT NULL);





CREATE TABLE Instructor (
	instructorID CHAR(7) PRIMARY KEY, 
	firstName VARCHAR(22) NOT NULL, 
	lastName VARCHAR(22) NOT NULL, 
	email VARCHAR(22) UNIQUE, 
	phoneNumber VARCHAR(17), 
	isPC BOOLEAN,			
	username VARCHAR(11) UNIQUE, 
	password VARCHAR(11) NOT NULL);



						
						
CREATE TABLE Advises (
	studentID CHAR(7) REFERENCES Student (studentID) ON DELETE CASCADE ON UPDATE CASCADE,
	instructorID CHAR(7) REFERENCES Instructor (instructorID) ON DELETE CASCADE ON UPDATE CASCADE,
	type VARCHAR(9) NOT NULL,		
	PRIMARY KEY (studentID, instructorID));	





CREATE TABLE Course (
	courseID VARCHAR(11) PRIMARY KEY, 
	fullName VARCHAR(55), 
	credits INT NOT NULL,				
	fallTerm BOOLEAN, 			
	springTerm BOOLEAN,			
	summerTerm VARCHAR(5));		




CREATE TABLE CourseOfferings (
	courseID VARCHAR(11) REFERENCES Course (courseID) ON DELETE CASCADE ON UPDATE CASCADE, 
	term VARCHAR(4) NOT NULL, 		
	section INT NOT NULL, 					
	instructorID CHAR(7) REFERENCES Instructor (instructorID) ON DELETE CASCADE ON UPDATE CASCADE,
	courseNumber VARCHAR(5), 		
	lectureDays VARCHAR(3) NOT NULL, 
	startime VARCHAR(5), 				
	endTime VARCHAR(5),			
	classroom VARCHAR(7),			
	PRIMARY KEY (courseID, section, term));
						




CREATE TABLE Teaches (
	instructorID CHAR(7) REFERENCES Instructor (instructorID) ON DELETE CASCADE ON UPDATE CASCADE,
	courseID VARCHAR(11) REFERENCES CourseOffering (courseID) ON DELETE CASCADE ON UPDATE CASCADE, 
	term VARCHAR(4) REFERENCES CourseOffering (term) ON DELETE CASCADE ON UPDATE CASCADE,
	section INT REFERENCES CourseOffering (section) ON DELETE CASCADE ON UPDATE CASCADE,				
	PRIMARY KEY (courseID, term, section)); 





CREATE TABLE Major (
	majorID VARCHAR(11) PRIMARY KEY, 	
	fullName VARCHAR(55),		
	totalCredits INT NOT NULL, 			
	type VARCHAR(5) NOT NULL, 		
	level VARCHAR(11) NOT NULL);	




						
CREATE TABLE HasCourse (
	majorID VARCHAR(11) REFERENCES Major (majorID) ON DELETE CASCADE ON UPDATE CASCADE,
	courseID VARCHAR(11) REFERENCES Course (courseID) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (courseID, majorID));	
	
	
	
	
CREATE TABLE EnrolledCourses (
	studentID CHAR(7) REFERENCES Student (studentID) ON DELETE CASCADE ON UPDATE CASCADE, 
	courseID VARCHAR(11) REFERENCES CourseOffering (courseID) ON DELETE CASCADE ON UPDATE CASCADE,
	section INT REFERENCES CourseOffering (section) ON DELETE CASCADE ON UPDATE CASCADE,
	term VARCHAR(4) REFERENCES CourseOffering (term) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (studentID, courseID, term)); 





CREATE TABLE Availability (
	instructorID CHAR(11) REFERENCES Instructor (instructorID) ON DELETE CASCADE ON UPDATE CASCADE,
	term VARCHAR(4), 		
	hours INT NOT NULL,		
	PRIMARY KEY (instructorID, term));





CREATE TABLE StudentSchedule (
	studentID CHAR(7) REFERENCES Student (studentID) ON DELETE CASCADE ON UPDATE CASCADE,
	courseID VARCHAR(11) REFERENCES Course (courseID) ON DELETE CASCADE ON UPDATE CASCADE,
	term VARCHAR(4),
	grade CHAR(1), 
	isPassed BOOLEAN,
	PRIMARY KEY (studentID, courseID, term));





CREATE TABLE HasMajor (
	studentID CHAR(7) REFERENCES Student (studentID) ON DELETE CASCADE ON UPDATE CASCADE,
	majorID VARCHAR(11) REFERENCES Major (majorID) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (studentID, majorID));





CREATE TABLE HasMinor (
	studentID CHAR(7) REFERENCES Student (studentID) ON DELETE CASCADE ON UPDATE CASCADE,
	majorID VARCHAR(11) REFERENCES Major (majorID) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (studentID, majorID));






CREATE TABLE CoRequisites (
	courseID VARCHAR(11) REFERENCES Course (courseID) ON DELETE CASCADE ON UPDATE CASCADE,
	coRequisiteCourse VARCHAR(11) REFERENCES Course (courseID) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (courseID, coRequisiteCourse));
	
	
	
	

CREATE TABLE PreRequisites (
	courseID VARCHAR(11) REFERENCES Course (courseID) ON DELETE CASCADE ON UPDATE CASCADE,
	coRequisiteCourse VARCHAR(11) REFERENCES Course (courseID) ON DELETE CASCADE ON UPDATE CASCADE,
	isMandatory BOOLEAN NOT NULL,
	PRIMARY KEY (courseID, coRequisiteCourse));